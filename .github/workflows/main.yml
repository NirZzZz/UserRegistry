name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 0:3306
        env:
          MYSQL_ROOT_PASSWORD: adminadmin
          MYSQL_DATABASE: users
        options: >-
          --health-cmd="mysqladmin ping -uroot -padminadmin"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker containers
      run: |
        docker-compose down -v || true
        docker-compose build
        docker-compose up -d

    - name: Wait for services to be up
      run: |
        docker-compose run db-init bash -c "while ! nc -z db 3306; do sleep 1; done"

    - name: Check MySQL Logs
      run: |
        docker-compose logs db

    - name: Print workspace directory structure
      run: |
        ls -R

    - name: Debug Python Environment
      run: |
        # Print Python path and verify import of db_connector
        echo "Python Path: $PYTHONPATH"
        echo "Current Working Directory: $(pwd)"
        echo "Available modules:"
        python -c "import sys; print(sys.path)"
        python -c "from userregistry import db_connector; print('db_connector imported successfully!')"

    - name: Add debugging to the test script
      run: |
        # Inject debugging code into combined_testing.py
        echo "Adding debug logging to combined_testing.py"
        sed -i '1 i\import logging\nlogging.basicConfig(level=logging.DEBUG)' tests/combined_testing.py

    - name: Run combined tests
      env:
        DATABASE_HOST: db
        DATABASE_PORT: 3306
        DATABASE_USER: root
        DATABASE_PASSWORD: adminadmin
        PYTHONPATH: "${{ github.workspace }}"
      run: |
        echo "Running combined tests with additional debug logging"
        python tests/combined_testing.py || {
          echo "Test failed! Capturing traceback.";
          cat tests/combined_testing.py;
          exit 1;
        }

    - name: Clean up Docker containers
      if: always()
      run: |
        docker-compose down -v